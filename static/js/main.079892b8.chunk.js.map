{"version":3,"sources":["components/Notification/Notification.module.css","transitions/fade.module.css","components/TabletShape/TabletShape.module.css","components/PopUpNotification/PopUpNotification.module.css","transitions/slide-reverse.module.css","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","transitions/slide.module.css","components/Filter/Filter.module.css","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Header/Header.js","components/TabletShape/TabletShape.js","components/PopUpNotification/PopUpNotification.js","components/App.js","index.js","components/Header/Header.module.css"],"names":["module","exports","Notification","title","className","styles","defaultProps","rules","name","number","messages","ContactForm","state","errors","isPageLoaded","InputNameId","uuidv4","InputNuberId","handleChange","e","preventDefault","target","value","replaceValue","replace","match","exec","shift","join","setState","handleSubmit","onAddContact","props","validateAll","then","reset","catch","formatedErrors","forEach","error","field","message","this","onSubmit","form","htmlFor","input","id","type","onChange","autoComplete","maxLength","inputContainer","button","Component","ContactItem","contactItem","onRemoveContact","container","numberInfo","buttonDelete","onClick","ContactList","contacts","length","TransitionGroup","component","contactList","map","item","CSSTransition","timeout","unmountOnExit","classNames","slideTransition","key","Filter","hanleFilterChange","Header","header","in","fadeTransition","TabletShape","children","screen","popUpNotification","App","filter","isAlreadyinContacts","hasContact","some","toLowerCase","addToContacts","contact","removeContact","persistedContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","includes","filteredContacts","applyFilter","slideReverseTransition","onEntered","setTimeout","PopUpNotification","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079892b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__YWZ4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1LZ0x\",\"enterActive\":\"fade_enterActive__2oxEw\",\"exit\":\"fade_exit__13dVQ\",\"exitActive\":\"fade_exitActive__3Mjne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"TabletShape_screen__116ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PopUpNotification_container__34XKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-reverse_enter__1zWK5\",\"enterActive\":\"slide-reverse_enterActive__191eE\",\"exit\":\"slide-reverse_exit__1ofwl\",\"exitActive\":\"slide-reverse_exitActive__5FM3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3cXfc\",\"form\":\"ContactForm_form__1a_WG\",\"input\":\"ContactForm_input__Undl7\",\"inputContainer\":\"ContactForm_inputContainer__2DXVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactItem_container__lPvdU\",\"buttonDelete\":\"ContactItem_buttonDelete__25E9u\",\"numberInfo\":\"ContactItem_numberInfo__15jPo\",\"name\":\"ContactItem_name__2QQQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1GNQF\",\"contactList\":\"ContactList_contactList__1TdfV\",\"contactItem\":\"ContactList_contactItem__x6eWT\",\"title\":\"ContactList_title__1xfxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2fVYZ\",\"enterActive\":\"slide_enterActive__x4mor\",\"exit\":\"slide_exit__1WSvx\",\"exitActive\":\"slide_exitActive__3KsMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__zQt2T\",\"title\":\"Filter_title__2jMVf\",\"container\":\"Filter_container__hukFl\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ title }) => (\n  <span className={styles.Notification}>{title}</span>\n);\n\nNotification.defaultProps = {\n  title: null,\n};\n\nNotification.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { validateAll } from 'indicative/validator';\nimport Notification from '../Notification/Notification';\nimport styles from './ContactForm.module.css';\n\nconst rules = {\n  name: 'required | string',\n  number: 'required|min:2',\n};\n\nconst messages = {\n  'name.required': 'Please choose a name for contact',\n  'number.required': 'Please enter a number',\n  'number.min': 'Number must be at least 2 characters',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n    isPageLoaded: false,\n  };\n\n  InputNameId = uuidv4();\n\n  InputNuberId = uuidv4();\n\n  handleChange = e => {\n    e.preventDefault();\n    const { value, name } = e.target;\n    let replaceValue = value;\n\n    if (name === 'number') {\n      replaceValue = value.replace(/[^\\d]/g, '');\n\n      const regex = /^([^\\s]{3})([^\\s]{3})([^\\s]{2})([^\\s]{2})$/g;\n      const match = regex.exec(replaceValue);\n      if (match) {\n        match.shift();\n        replaceValue = match.join('-');\n      }\n    }\n\n    this.setState({\n      [name]: replaceValue,\n    });\n  };\n\n  handleSubmit = e => {\n    const { onAddContact } = this.props;\n    e.preventDefault();\n\n    validateAll(this.state, rules, messages)\n      .then(() => {\n        onAddContact({ ...this.state });\n        this.reset();\n      })\n      .catch(errors => {\n        const formatedErrors = {};\n\n        errors.forEach(error => {\n          formatedErrors[error.field] = error.message;\n        });\n        this.setState({\n          errors: formatedErrors,\n        });\n      });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '', errors: null });\n  };\n\n  render() {\n    const { name, number, errors } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <div>\n            <label htmlFor={this.InputNameId}>Name:</label>\n            <input\n              className={styles.input}\n              name=\"name\"\n              id={this.InputNameId}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={name}\n              autoComplete=\"off\"\n              maxLength={20}\n            />\n            {errors && <Notification title={errors.name} />}\n          </div>\n          <div className={styles.inputContainer}>\n            <label htmlFor={this.InputNuberId}>Number:</label>\n            <input\n              className={styles.input}\n              name=\"number\"\n              id={this.InputNuberId}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={number}\n              autoComplete=\"off\"\n              maxLength={10}\n            />\n            {errors && <Notification title={errors.number} />}\n          </div>\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contactItem, onRemoveContact }) => {\n  const { name, number } = contactItem;\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.numberInfo}>\n        <span className={styles.name}>{name}</span>\n        <span>{number}</span>\n      </p>\n      <button\n        className={styles.buttonDelete}\n        onClick={onRemoveContact}\n        type=\"button\"\n      >\n        {null}\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contactItem: propTypes.shape({\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }).isRequired,\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    contacts.length > 0 && (\n      <div className={styles.container}>\n        <h2 className={styles.title}>Contact list</h2>\n        <TransitionGroup component=\"ul\" className={styles.contactList}>\n          {contacts.map(item => {\n            return (\n              <CSSTransition\n                timeout={250}\n                unmountOnExit\n                classNames={slideTransition}\n                key={item.id}\n              >\n                <li className={styles.contactItem}>\n                  <ContactItem\n                    contactItem={item}\n                    onRemoveContact={() => onRemoveContact(item.id)}\n                  />\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </div>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ hanleFilterChange }) => {\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.title}>Find contacts by name:</h3>\n      <input\n        className={styles.input}\n        type=\"text\"\n        onChange={hanleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  hanleFilterChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeTransition from '../../transitions/fade.module.css';\nimport styles from './Header.module.css';\n\nclass Header extends Component {\n  state = {\n    isPageLoaded: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isPageLoaded: true,\n    });\n  }\n\n  render() {\n    const { isPageLoaded } = this.state;\n\n    return (\n      <header className={styles.header}>\n        <CSSTransition\n          in={isPageLoaded}\n          timeout={500}\n          classNames={fadeTransition}\n        >\n          <h3 className={styles.title}>Phonebook</h3>\n        </CSSTransition>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './TabletShape.module.css';\n\nconst TabletShape = ({ children }) => {\n  return <div className={styles.screen}>{children}</div>;\n};\n\nexport default TabletShape;\n\nTabletShape.defaultProps = {\n  children: null,\n};\n\nTabletShape.propTypes = {\n  children: propTypes.node,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './PopUpNotification.module.css';\n\nconst popUpNotification = ({ title }) => (\n  <div className={styles.container}>\n    <p>{title}</p>\n  </div>\n);\n\npopUpNotification.propTypes = {\n  title: propTypes.string.isRequired,\n};\n\nexport default popUpNotification;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport Header from './Header/Header';\nimport TabletShape from './TabletShape/TabletShape';\nimport PopUpNotification from './PopUpNotification/PopUpNotification';\nimport slideTransition from '../transitions/slide.module.css';\nimport slideReverseTransition from '../transitions/slide-reverse.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isAlreadyinContacts: false,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  hasContact = name => {\n    const { contacts } = this.state;\n    return contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n  };\n\n  addToContacts = ({ name, number }) => {\n    const isAlreadyinContacts = this.hasContact(name);\n\n    if (isAlreadyinContacts) {\n      this.setState({\n        isAlreadyinContacts: true,\n      });\n    } else {\n      const contact = {\n        name,\n        number,\n        id: uuidv4(),\n      };\n      this.setState(state => {\n        return { contacts: [...state.contacts, contact] };\n      });\n    }\n  };\n\n  removeContact = id => {\n    this.setState(state => {\n      const contacts = state.contacts.filter(contact => contact.id !== id);\n      const filter = contacts.length > 1 ? state.filter : '';\n      return { contacts, filter };\n    });\n  };\n\n  hanleFilterChange = e => {\n    const { value } = e.target;\n    this.setState({\n      filter: value,\n    });\n  };\n\n  applyFilter() {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  render() {\n    const { contacts, isAlreadyinContacts } = this.state;\n\n    const filteredContacts = this.applyFilter();\n\n    return (\n      <TabletShape>\n        <Header />\n        <CSSTransition\n          in={isAlreadyinContacts}\n          timeout={250}\n          classNames={slideReverseTransition}\n          unmountOnExit\n          onEntered={() => {\n            setTimeout(() => {\n              this.setState(() => {\n                return {\n                  isAlreadyinContacts: false,\n                };\n              });\n            }, 2000);\n          }}\n        >\n          <PopUpNotification title=\"Contact already exist!\" />\n        </CSSTransition>\n\n        <ContactForm onAddContact={this.addToContacts} />\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <Filter hanleFilterChange={this.hanleFilterChange} />\n        </CSSTransition>\n\n        <ContactList contacts={filteredContacts} onRemoveContact={this.removeContact} />\n      </TabletShape>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__17NZ9\",\"header\":\"Header_header__3KGQE\"};"],"sourceRoot":""}